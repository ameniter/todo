{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fernandorempel/Documents/reacts/todo/src/App.js\";\nimport React, { Component } from 'react';\nimport { TodoBanner } from \"./TodoBanner\";\nimport { TodoCreator } from \"./TodoCreator\";\nimport { TodoRow } from \"./TodoRow\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateNewTextValue = event => {\n      this.setState({\n        newItemText: event.target.value\n      });\n    };\n\n    this.createNewTodo = task => {\n      if (!this.state.todoItems.find(item => item.action === task)) {\n        this.setState({\n          todoItems: [...this.state.todoItems, {\n            action: task,\n            done: false\n          }]\n        });\n      }\n    };\n\n    this.toggleTodo = todo => this.setState({\n      todoItems: this.state.todoItems.map(item => item.action === todo.action ? { ...item,\n        done: !item.done\n      } : item)\n    });\n\n    this.todoTableRows = () => this.state.todoItems.map(item => /*#__PURE__*/_jsxDEV(TodoRow, {\n      item: item,\n      callback: this.toggleTodo\n    }, item.action, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this));\n\n    this.render = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TodoBanner, {\n        name: this.state.userName,\n        tasks: this.state.todoItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(TodoCreator, {\n          callback: this.createNewTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.todoTableRows()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }, this);\n\n    this.state = {\n      userName: \"Adam\",\n      todoItems: [{\n        action: \"Buy Flowers\",\n        done: false\n      }, {\n        action: \"Get Shoes\",\n        done: false\n      }, {\n        action: \"Collect Tickets\",\n        done: true\n      }, {\n        action: \"Call Joe\",\n        done: false\n      }]\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/fernandorempel/Documents/reacts/todo/src/App.js"],"names":["React","Component","TodoBanner","TodoCreator","TodoRow","App","constructor","props","updateNewTextValue","event","setState","newItemText","target","value","createNewTodo","task","state","todoItems","find","item","action","done","toggleTodo","todo","map","todoTableRows","render","userName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TodoBanner } from \"./TodoBanner\";\nimport { TodoCreator } from \"./TodoCreator\";\nimport { TodoRow } from \"./TodoRow\";\n\n\nexport default class App extends Component {\n\tconstructor(props) {\n\t        super(props);\n\t        this.state = {\n\t\t\tuserName: \"Adam\",\n\t\t\ttodoItems: [{ action: \"Buy Flowers\", done: false },\n                \t        { action: \"Get Shoes\", done: false },\n                \t        { action: \"Collect Tickets\", done: true },\n                \t        { action: \"Call Joe\", done: false }],\n\t\t}\n\t}\n\n\tupdateNewTextValue = (event) => {\n\t\tthis.setState({ newItemText: event.target.value });\n\t}\n\n\tcreateNewTodo = (task) => {\n\t\tif (!this.state.todoItems.find(item => item.action === task)) {\n\t\t\tthis.setState({\n\t\t\t\ttodoItems: [...this.state.todoItems, { action: task, done: false }]\n\t\t\t});\n\t\t}\n\t}\n\n\n\ttoggleTodo = (todo) => this.setState({ todoItems:\n\t\tthis.state.todoItems.map(item => item.action === todo.action\n\t\t? { ...item, done: !item.done } : item) }); \n\n\ttodoTableRows = () => this.state.todoItems.map(item =>\n        \t<TodoRow key={ item.action } item={ item } callback={ this.toggleTodo } />)\n\n\trender = () =>\n\t\t<div>\n\t\t\t<TodoBanner name={ this.state.userName } tasks={this.state.todoItems } />\n\t\t\t<div className=\"container-fluid\">\n\t\t\t\t<TodoCreator callback={ this.createNewTodo } />\n\t\t\t\t<table className=\"table table-striped table-bordered\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr><th>Description</th><th>Done</th></tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>{ this.todoTableRows() }</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n}\n"]},"metadata":{},"sourceType":"module"}